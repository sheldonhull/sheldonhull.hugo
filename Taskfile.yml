# demo https://github.com/go-task/examples/blob/master/go-web-app/Taskfile.yml

version: '3'
output: prefixed
silent: true
env:
  HUGO: hugo
  DEFAULT_BUILD_SERVER: http://127.0.0.1:1313 #localhost:1313
  DEFAULT_HUGO_DESTINATION: _site
  HUGO_VERSION: 0.80.0
  GITHUB_REPO: github.com/sheldonhull/sheldonhull.hugo
  DOCKER_BUILDKIT: 1
  # AWS_SDK_LOAD_CONFIG: 1
  # AWS_REGION:  # Override for local developement work
vars:
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  TODAY: '{{now | date "2006-01-02"}}' # https://golang.org/src/time/format.go
  YEAR: '{{now | date "2006"}}' # https://golang.org/src/time/format.go
  MONTH: '{{now | date "01"}}' # https://golang.org/src/time/format.go
  DAY: '{{now | date "02"}}' # https://golang.org/src/time/format.go
  # HUGO DESIRED OUTPUT: 2021-05-24T17:55:12-05:00
  TODAY_UTC: '{{ now | date "2006-01-02T15:04:05-07:00" }}' # Example Output 2021-05-24T17:55:12-05:00
  black: \033[:0;30m
  red: \033[:0;31m
  green: \033[:0;32m
  orange: \033[:0;33m
  blue: \033[:0;34m
  purple: \033[:0;35m
  cyan: \033[:0;36m
  light_gray: \033[:0;37m
  dark_gray: \033[:1;30m
  light_red: \033[:1;31m
  light_green: \033[:1;32m
  yellow: \033[:1;33m
  light_blue: \033[:1;34m
  light_purple: \033[:1;35m
  light_cyan: \033[:1;36m
  white: \033[:1;37m
  nocolor: \u001b[0m
  reversed: \u001b[7m
  CODE_CONFIG: .code-config

tasks:
  default:
    cmds:
      - task: list
  list:
    desc: list tasks
    cmds:
      - task --list
  vars:
    desc: variable output
    cmds:
      - |
        echo -e "{{.light_gray}}=== â„¹ {{ .reversed }} Variable Info from Task {{ .nocolor }} === "
        echo -e "{{.light_gray}}TODAY                {{.nocolor}}: {{ .orange}}{{ .TODAY }} {{ .nocolor }}"
        echo -e "{{.light_gray}}TODAY_UTC            {{.nocolor}}: {{ .orange}}{{ .TODAY_UTC }} {{ .nocolor }}"
        echo -e "{{.light_gray}}GIT_COMMIT           {{.nocolor}}: {{ .orange}}{{ .GIT_COMMIT }} {{ .nocolor }}"
  serve:
    desc: Build and run hugo
    cmds:
      - |
        if [ -x "$(command -v gp)" ]; then
          echo "gitpod command: $(gp url 1313)"
          export DEPLOY_PRIME_URL=$(gp url 1313)
        fi
      - $HUGO serve -b ${DEPLOY_PRIME_URL:-$DEFAULT_BUILD_SERVER} --verbose --enableGitInfo -d _site --buildFuture --buildDrafts --gc --disableFastRender

      # - task: build
  echo-debug:
    desc: output variables for debugging netlify or other build tasks
    cmds:
      - echo "$(hugo version)"
      - git status --porcelain
      - |
        if [ -x "$(command -v gp)" ]; then
          echo "gitpod command: $(gp url 1313)"
          export DEPLOY_PRIME_URL=$(gp url 1313)
        fi
      - echo "DEPLOY_PRIME_URL   = $DEPLOY_PRIME_URL"
      - echo "HUGO_BASEURL = $HUGO_BASEURL"
      - export GIT_COMMIT_SHA=`git rev-parse --verify HEAD`
      - export GIT_COMMIT_SHA_SHORT=`git rev-parse --short HEAD`
      - echo "GIT_COMMIT_SHA       = $GIT_COMMIT_SHA"
      - echo "GIT_COMMIT_SHA_SHORT = $GIT_COMMIT_SHA_SHORT"
      - echo "HUGO_GOOGLEANALYTICS  = $HUGO_GOOGLEANALYTICS"
      - echo "HUGO_ENABLEGITINFO    = $HUGO_ENABLEGITINFO"
      - echo "HUGO_VERSION          = $HUGO_VERSION"
  build:
    desc: Build the webpage for previews or other debug setup
    #deps: [assets, templates]
    cmds:
      - $HUGO --buildFuture --buildDrafts --enableGitInfo --verbose --minify --gc --destination ${HUGO_DESTINATION:-$DEFAULT_HUGO_DESTINATION} -b ${DEPLOY_PRIME_URL:-$DEFAULT_BUILD_SERVER}
  build-public:
    desc: Build algolia public json only if missing algolia
    generates:
      - public/algolia.json
    env:
      HUGO_ENABLEGITINFO: 'true'
      HUGO_BASEURL: 'https://www.sheldonhull.com/'
      HUGO_MINIFY: 'true'
      HUGO_DESTINATION: 'public'
      #ALGOLIA_ADMIN_KEY: SET IN LOCAL ENVIRONMENT ONLY
      # DEPLOY_PRIME_URL:
      #-b $DEPLOY_PRIME_URL
    cmds:
      - $HUGO --enableGitInfo  --gc --cleanDestinationDir --verboseLog --minify --destination ${HUGO_DESTINATION:-$DEFAULT_HUGO_DESTINATION} -b ${DEPLOY_PRIME_URL:-$DEFAULT_BUILD_SERVER}
  init:
    desc: Initialize project to ensure dependencies, submodules, and tooling is ready
    cmds:
      # - git submodule update --init --recursive
      - git rm ./themes/codeit
      - hugo mod get -u
      # -    {{ .GITHUB_REPO }}
      # - hugo mod get -u -v
      # - hugo mod tidy
      - npm install --quiet atomic-algolia #--globals
  go:
    desc: Setup go environment
    cmds:
      - go get github.com/algolia/algoliasearch-client-go/v3@v3.4.0
      - go get -u
  go-run:
    desc: Try running the new go algolia command
    cmds:
      - go run main.go
  algolia:
    desc: Generate algolia json
    deps: [build-public]
    # These are configured in the .devcontainer but no harm in setting here too
    env:
      ALGOLIA_APP_ID: 04HSGXXQD5
      ALGOLIA_INDEX_FILE: public/algolia.json
      ALGOLIA_INDEX_NAME: sheldonhull.com
    cmds:
      - npm run algolia
  theme-update:
    desc: rebase on remote theme to pull in the upstream changes
    cmds:
      # - git submodule update --rebase --remote
      - hugo mod get -u
  deinit_submodule:
    desc: cleanup submodule
    cmds:
      - |
        git submodule deinit themes/codeit
        git rm themes/codeit
        rm -rf .git/modules/themes/codeit
        git rm --cached themes/codeit
  blog:
    desc: Create a new blog post
    cmds:
      - |
        echo -e "{{.light_gray}}=== â„¹ {{ .reversed }} Variable Info from Task {{ .nocolor }} === "
        echo -e "{{.light_gray}}TODAY_UTC                {{.nocolor}}: {{ .orange}}{{ .TODAY_UTC }} {{ .nocolor }}"
        echo -e "{{.green}}Please enter title{{ .nocolor }}"
        read;
        echo -e "{{.green}}Title: ${REPLY}{{ .nocolor }}"
        title=$(echo ${REPLY} \
          | sed 's/\(.\)\([A-Z]\)/\1-\2/g' \
          | sed 's/[[:space:]]*//g' \
          | tr '[:upper:]' '[:lower:]'
        )
        directory=./content/blog/
        mkdir -p $directory/{{ .YEAR }} || echo -e "{{.dark_gray}}ðŸ”„ skipped creation of directory [$directory] per already exists {{.nocolor}}"
        filename=$directory/{{ .YEAR }}/{{ .YEAR }}-{{ .MONTH }}-{{ .DAY }}-$title.md
        echo -e "{{ .dark_gray }} creating new file: $filename {{ .nocolor }}"
        hugo new $filename --kind blog
        echo -e "{{ .green }} âœ… created: $filename {{ .nocolor }}"
  100daysofcode_readconfig:
    desc: read the counter values for 100 days of code to simplify creation from archetype
    cmds:
    - |
      source {{ .CODE_CONFIG }}
      echo -e "{{.light_gray}}=== â„¹ {{ .reversed }} 100 Days Of Code Config from: [{{ .CODE_CONFIG}}] {{ .nocolor }} === "
      echo -e "{{.light_gray}}LANGUAGE                {{.nocolor}}: {{ .orange}} $LANGUAGE {{ .nocolor }}"
      echo -e "{{.light_gray}}ROUND                   {{.nocolor}}: {{ .orange}} $ROUND {{ .nocolor }}"
      echo -e "{{.light_gray}}COUNTER                 {{.nocolor}}: {{ .orange}} $COUNTER {{ .nocolor }}"
  post:
    desc: Create a new post
    cmds:
      - task: 100daysofcode_readconfig
      - |
        echo -e "{{.light_gray}}=== â„¹ {{ .reversed }} Variable Info from Task {{ .nocolor }} === "
        echo -e "{{.light_gray}}TODAY_UTC {{.nocolor}}: {{ .orange}}{{ .TODAY_UTC }} {{ .nocolor }}"
        echo -e "{{.green}}Please enter title{{ .nocolor }}"
        read;
        echo -e "{{.green}}Title: ${REPLY}{{ .nocolor }}"
        title=$(echo ${REPLY} \
          | sed 's/\(.\)\([A-Z]\)/\1-\2/g' \
          | sed 's/[[:space:]]*//g' \
          | tr '[:upper:]' '[:lower:]'
        )
        echo -e "{{.green}}Please enter [blog, microblog, code] for archetype{{ .nocolor }}"
        read;
        archetype=$(echo ${REPLY})

        directory=./content/posts/
        mkdir -p $directory/{{ .YEAR }} || echo -e "{{.dark_gray}}ðŸ”„ skipped creation of directory [$directory] per already exists {{.nocolor}}"
        filename=$directory{{ .YEAR }}/{{ .YEAR }}-{{ .MONTH }}-{{ .DAY }}-$title.md

        if [[ $archetype == "code" ]];
        then
          source {{ .CODE_CONFIG }}
          echo -e "{{.light_gray}}=== â„¹ {{ .reversed }} 100 Days Of Code Config from: [{{ .CODE_CONFIG}}] {{ .nocolor }} === "
          echo -e "{{.light_gray}}LANGUAGE                {{.nocolor}}: {{ .orange}} $LANGUAGE {{ .nocolor }}"
          echo -e "{{.light_gray}}ROUND                   {{.nocolor}}: {{ .orange}} $ROUND {{ .nocolor }}"
          echo -e "{{.light_gray}}COUNTER                 {{.nocolor}}: {{ .orange}} $COUNTER {{ .nocolor }}"
          UPDATED_COUNTER=$(($COUNTER+1))
          TARGET_KEY=COUNTER
          REPLACEMENT_VALUE=$UPDATED_COUNTER
          sed -i '' "s/\($TARGET_KEY *= *\).*/\1$REPLACEMENT_VALUE/" "{{ .CODE_CONFIG }}"
          echo -e "{{.green}} ðŸ’¾ updated code config with new counter: from [$COUNTER] to [$UPDATED_COUNTER] (saved in {{ .CODE_CONFIG }}){{ .nocolor }}"
          echo -e "{{.dark_gray}} â„¹ override filename with 100days of code naming convention{{ .nocolor }}"
          filename=$directory/{{ .YEAR }}/{{ .YEAR }}-{{ .MONTH }}-{{ .DAY }}-$LANGUAGE-R$ROUND-day-$UPDATED_COUNTER.md
          hugo new $filename --kind $archetype

          # Replace the counter in the text file
          sed -i '' "s/VAR_LANGUAGE/$LANGUAGE/g" "$filename"
          sed -i '' "s/VAR_ROUND/$ROUND/g" "$filename"
          sed -i '' "s/VAR_DAYCOUNTER/$UPDATED_COUNTER/g" "$filename"
          echo -e "{{.dark_gray}} ðŸ’¾ update VAR_DAYCOUNTER,VAR_LANGUAGE,VAR_DAY_COUNTER in output file{{ .nocolor }}"
        else
          hugo new $filename --kind $archetype
        fi
        echo -e "{{ .dark_gray }} creating new file: $filename {{ .nocolor }}"
        echo -e "{{ .green }} âœ… created [ $archetype ] at: [ $filename ] {{ .nocolor }}"
  bear:
    desc: Run bhugo to sync posts
    cmds:
    - |
      echo -e "{{.light_gray}}=== â„¹ {{ .reversed }} Running Bear Hugo {{ .nocolor }} === "
      go get -u github.com/Zach-Johnson/bhugo
      bhugo
    preconditions:
      - test -f .bhugo
# TODO: Add task for imageoptim preprocessing on staged files only
