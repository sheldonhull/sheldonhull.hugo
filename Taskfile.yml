# demo https://github.com/go-task/examples/blob/master/go-web-app/Taskfile.yml

version: '3'
output: prefixed
env:
  # HUGO: /usr/bin/hugo
  HUGO: hugo
  DEFAULT_BUILD_SERVER: localhost:1313
  DEFAULT_HUGO_DESTINATION: _site
  HUGO_VERSION: 0.80.0
  # HUGO_ENV:
  # HUGO_ENVIRONMENT:
vars:

  # JS_FILES:
  #   assets/js/vendor/jquery.js
  #   assets/js/main.js

  # CSS_FILES:
  #   assets/css/vendor/reboot.css
  #   assets/css/main.css


tasks:
  default:
    cmds:
      - task: build
  serve:
    desc: Build and run hugo
    cmds:
      - |
        if [ -x "$(command -v gp)" ]; then
          echo "gitpod command: $(gp url 1313)"
          export DEPLOY_PRIME_URL=$(gp url 1313)
        fi
      - $HUGO serve -b ${DEPLOY_PRIME_URL:-$DEFAULT_BUILD_SERVER} --verbose --enableGitInfo -d _site --buildFuture --buildDrafts --gc --disableFastRender

      # - task: build
  echo-debug:
    desc: output variables for debugging netlify or other build tasks
    cmds:
      - echo "$(hugo version)"
      - git status --porcelain
      - |
          if [ -x "$(command -v gp)" ]; then
            echo "gitpod command: $(gp url 1313)"
            export DEPLOY_PRIME_URL=$(gp url 1313)
          fi
      - echo "DEPLOY_PRIME_URL   = $DEPLOY_PRIME_URL"
      - echo "HUGO_BASEURL = $HUGO_BASEURL"
      - export GIT_COMMIT_SHA=`git rev-parse --verify HEAD`
      - export GIT_COMMIT_SHA_SHORT=`git rev-parse --short HEAD`
      - echo "GIT_COMMIT_SHA       = $GIT_COMMIT_SHA"
      - echo "GIT_COMMIT_SHA_SHORT = $GIT_COMMIT_SHA_SHORT"
      - echo "HUGO_GOOGLEANALYTICS  = $HUGO_GOOGLEANALYTICS"
      - echo "HUGO_ENABLEGITINFO    = $HUGO_ENABLEGITINFO"
      - echo "HUGO_VERSION          = $HUGO_VERSION"
  build:
    desc: Build the webpage for previews or other debug setup
    #deps: [assets, templates]
    cmds:
      - $HUGO --buildFuture --buildDrafts --enableGitInfo --verbose --minify --gc --destination ${HUGO_DESTINATION:-$DEFAULT_HUGO_DESTINATION} -b ${DEPLOY_PRIME_URL:-$DEFAULT_BUILD_SERVER}
  build-public:
      desc: Build algolia public json only if missing algolia
      generates:
        - public/algolia.json
      env:
        HUGO_ENABLEGITINFO: "true"
        HUGO_BASEURL: "https://www.sheldonhull.com/"
        HUGO_MINIFY: "true"
        HUGO_DESTINATION: "public"
        #ALGOLIA_ADMIN_KEY: SET IN LOCAL ENVIRONMENT ONLY
        # DEPLOY_PRIME_URL:
        #-b $DEPLOY_PRIME_URL
      cmds:
        - $HUGO --enableGitInfo  --gc --cleanDestinationDir --verboseLog --minify --destination ${HUGO_DESTINATION:-$DEFAULT_HUGO_DESTINATION} -b ${DEPLOY_PRIME_URL:-$DEFAULT_BUILD_SERVER}
  init:
    desc: Initialize project to ensure dependencies, submodules, and tooling is ready
    cmds:
      - git submodule update --init --recursive
      - hugo mod tidy
      - hugo mod get -u
      - npm install --global --quiet atomic-algolia
  go:
    desc: Setup go environment
    cmds:
    - go get github.com/algolia/algoliasearch-client-go/v3@v3.4.0
    - go get -u
  go-run:
    desc: Try running the new go algolia command
    cmds:
    - go run main.go
  algolia:
    desc: Generate algolia json
    deps: [build-public]
    # These are configured in the .devcontainer but no harm in setting here too
    env:
     ALGOLIA_APP_ID: 04HSGXXQD5
     ALGOLIA_INDEX_FILE: public/algolia.json
     ALGOLIA_INDEX_NAME: sheldonhull.com
    cmds:
    - npm run algolia
  theme-update:
      desc: rebase on remote theme to pull in the upstream changes
      cmd:
        - git submodule update --rebase --remote
  # assets:
  #   desc: Bundle assets and generate box for it
  #   deps: [js, css]
  #   cmds:
  #     - fileb0x assets_box.yml
  #   sources:
  #     - public/**/*
  #   generates:
  #     - boxes/assets/ab0x.go
  #     - assets_box.yml
  #   method: checksum

  # js:
  #   desc: Bundle JS
  #   cmds:
  #     - minify -o public/app.js {{.JS_FILES}}
  #   sources:
  #     - assets/js/**/*.js
  #   generates:
  #     - public/app.js
  #   method: checksum

  # css:
  #   desc: Bundle CSS
  #   cmds:
  #     - minify -o public/app.css {{.CSS_FILES}}
  #   sources:
  #     - assets/css/**/*.css
  #   generates:
  #     - public/app.css
  #   method: checksum

  # templates:
  #   desc: Generate box for HTML templates
  #   cmds:
  #     - fileb0x templates_box.yml
  #   sources:
  #     - templates/**/*
  #     - templates_box.yml
  #   generates:
  #     - boxes/templates/ab0x.go
  #   method: checksum

  # dl-deps:
  #   desc: Install tools required to build this app
  #   cmds:
  #     - task: go-get
  #       vars: {REPO: github.com/tdewolff/minify/cmd/minify}
  #     - task: go-get
  #       vars: {REPO: github.com/UnnoTed/fileb0x}

  # go-get:
  #   cmds:
  #     - go get -u {{.REPO}}
