<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tfs on sheldonhull.com</title>
    <link>https://www.sheldonhull.com/tags/tfs/</link>
    <description>Recent content in Tfs on sheldonhull.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.sheldonhull.com/tags/tfs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TFS Custom Task - Service Actions (for TFS 2015 Update 2.1 or before)</title>
      <link>https://www.sheldonhull.com/blog/2017-03-07-tfs-custom-task-service-actions-for-tfs-2015-update-2.1-or-before/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.sheldonhull.com/blog/2017-03-07-tfs-custom-task-service-actions-for-tfs-2015-update-2.1-or-before/</guid>
      <description>Apparently, boolean values for custom VSTS tasks for versions prior to TFS 2015 Update 3) require some special handling as they don&amp;rsquo;t pass the checkbox values as actual powershell $true or $false. Instead the task passes this information along as true or false. To properly handle this you&amp;rsquo;ll need to pass in the value as a string then convert to boolean.
I found a great start on working on this solution in a blog post by Rene which has more detail, so check it out.</description>
    </item>
    
    <item>
      <title>TFS Work-Item Fancy Filtering</title>
      <link>https://www.sheldonhull.com/blog/2016-03-18-tfs-work-item-fancy-filtering/</link>
      <pubDate>Fri, 18 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.sheldonhull.com/blog/2016-03-18-tfs-work-item-fancy-filtering/</guid>
      <description>If you want to create a TFS query that would identify work items that have changed, but were not changed by the person working it, there is a nifty way to do this.The filtering field can be set to &amp;lt;&amp;gt; another field that is available, but the syntax/setup in Visual Studio is not intuitive. It&amp;rsquo;s in the dropdown list, but I&amp;rsquo;d never noticed it before!
AND &amp;#39; Changed By &amp;#39; &amp;lt;&amp;gt; [Field] &amp;#39; Assigned to Note that you don&amp;rsquo;t include brackets on the assigned to field, and that the &amp;lt;&amp;gt; [Field] is not a placeholder for you to type the field name in, it&amp;rsquo;s actually the literal command for it to parse this correctly.</description>
    </item>
    
  </channel>
</rss>