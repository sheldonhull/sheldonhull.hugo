<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Dive on sheldonhull.com</title>
    <link>https://www.sheldonhull.com/tags/deep-dive/</link>
    <description>Recent content in Deep Dive on sheldonhull.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.sheldonhull.com/tags/deep-dive/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debugging Type Binding in PowerShell</title>
      <link>https://www.sheldonhull.com/blog/2019-03-11-debugging-type-binding-in-powershell/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.sheldonhull.com/blog/2019-03-11-debugging-type-binding-in-powershell/</guid>
      <description>Some effort I spent in researching Type Binding in Stack Overflow to help answer a question by Chris Oldwood helped me solidify my understanding of the best way to debug more complicated scenarios such as this in PowerShell.
 Why does this PowerShell function&amp;rsquo;s default argument change value based on the use of . or &amp;amp; to invoke a command within it? 
 Spent some digging into this and this is what I&amp;rsquo;ve observed.</description>
    </item>
    
    <item>
      <title>Utilizing the power of table parameters to reduce IO, improve performance, decrease pollution, and achieve world peace...</title>
      <link>https://www.sheldonhull.com/blog/utilizing-the-power-of-table-parameters-to-reduce-io-improve-performance-decrease-pollution-and-achieve-world-peace/</link>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.sheldonhull.com/blog/utilizing-the-power-of-table-parameters-to-reduce-io-improve-performance-decrease-pollution-and-achieve-world-peace/</guid>
      <description>I was dealing with a challenging dynamic sql procedure that allowed a .NET app to pass in a list of columns and a view name, and it would generate a select statement from this view. Due to requirements at the time, I needed the flexibility of the &amp;ldquo;MAIN&amp;rdquo; proc which generated a dynamic select statement, while overriding certain requested views by executing a stored proc instead of the dynamic sql.</description>
    </item>
    
  </channel>
</rss>