<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc='http://purl.org/dc/elements/1.1/'>
    <channel>
        <title>Supercharge Your Git Workflow - Series - sheldonhull.com</title>
        <link>https://www.sheldonhull.com/series/supercharge-your-git-workflow/</link>
        <description>Supercharge Your Git Workflow - Series - sheldonhull.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 23 Feb 2021 22:23:00 &#43;0000</lastBuildDate><atom:link href="https://www.sheldonhull.com/series/supercharge-your-git-workflow/" rel="self" type="application/rss+xml" />

<item>
    <title>
        Git Workflow With Git Town
    </title>
    <link>
        https://www.sheldonhull.com/git-workflow-with-git-town/
    </link>
    <pubDate>
        Tue, 23 Feb 2021 22:23:00 &#43;0000
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/git-workflow-with-git-town/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="resources" class="headerLink">
    <a href="#resources" class="header-mark"></a>Resources</h2><p><a href="https://bit.ly/2OR6zIf" target="_blank" rel="noopener noreferrer">Git-Town</a></p>
<h2 id="painful-but-powerful" class="headerLink">
    <a href="#painful-but-powerful" class="header-mark"></a>Painful But Powerful</h2><p>Let&rsquo;s get this out of the way.</p>
<p>Git isn&rsquo;t intuitive.</p>
<p>It has quite a bit of a learning curve.</p>
<p>However, with this flexibility comes great flexibility.
This tool has powered so much of modern open-source development.</p>
<h2 id="optimize-for-the-pain" class="headerLink">
    <a href="#optimize-for-the-pain" class="header-mark"></a>Optimize for the Pain</h2><p>To improve the development experience some tools can help provide structure.</p>
<p>This won&rsquo;t be an attempt to compare every git GUI, or push any specific tooling.
It&rsquo;s more sharing my experience and what I&rsquo;ve found helps accelerate my usage.</p>
<h2 id="tools-ive-relied-on" class="headerLink">
    <a href="#tools-ive-relied-on" class="header-mark"></a>Tools I&rsquo;ve Relied On</h2><ul>
<li><a href="https://bit.ly/2OR6zIf" target="_blank" rel="noopener noreferrer">Git-Town</a></li>
<li><a href="https://bit.ly/37F8vu1" target="_blank" rel="noopener noreferrer">Bit</a></li>
<li><a href="https://bit.ly/3boywik" target="_blank" rel="noopener noreferrer">GitHub CLI</a></li>
<li><a href="https://bit.ly/3pEu8AJ" target="_blank" rel="noopener noreferrer">Git Graph</a></li>
<li><a href="https://bit.ly/3dBaUcZ" target="_blank" rel="noopener noreferrer">Git Lens</a></li>
</ul>
<p>I&rsquo;m not going to go into full detail on each, but check these out to help expedite your workflow.</p>
<h2 id="the-challenge-in-keeping-up-to-date-with-main" class="headerLink">
    <a href="#the-challenge-in-keeping-up-to-date-with-main" class="header-mark"></a>The Challenge In Keeping Up To Date With Main</h2><p>I use what&rsquo;s normally called <code>trunk-based</code> development.
This entails regularly moving commits from branches into the main branch, often rebasing while maintaining it in a functional state.</p>
<p>I&rsquo;ll create a feature branch, bug fix, or refactor branch and then merge this to <code>main</code> as soon as functional.</p>
<p>I prefer a rebase approach on my branches, and when many ci/fix type commits, to squash this into a single unit of work as the results of the PR.
This can result in &ldquo;merge hell&rdquo; as you try rebase on a busy repo.</p>
<h2 id="enter-git-town" class="headerLink">
    <a href="#enter-git-town" class="header-mark"></a>Enter Git Town</h2><p>This tool solves so many of the basic workflow issues, that it&rsquo;s become one of the most impactful tools to my daily work.</p>
<div
    class="details admonition Tip
      open
    "
  >
    <div class="details-summary admonition-title">
      <i
        class="icon fas fa-pencil-alt fa-fw"
      ></i>
      Enable Aliases
      <i class="details-icon fas fa-angle-right fa-fw"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">The examples that follow use <code>git sync</code>, <code>git hack feat/new-feature</code>, etc as examples because I&rsquo;ve run the command <code>git-town alias true</code> which enables the alias configuration for git town, reducing verbosity.
Instead of <code>git town sync</code>, you can run <code>git sync</code>.</div>
    </div>
  </div>
<h3 id="example-1-create-a-branch-for-a-new-unit-of-work-while-you-are-already-on-another-branch" class="headerLink">
    <a href="#example-1-create-a-branch-for-a-new-unit-of-work-while-you-are-already-on-another-branch" class="header-mark"></a>Example 1: Create a Branch for a New Unit of Work While You Are Already On Another Branch</h3><p>Normally this would require:</p>
<ol>
<li>Stash/Push current work</li>
<li>Checkout master</li>
<li>Fetch latest and pull with rebase</li>
<li>Resolve any conflicts from rebase</li>
<li>Create the new branch from main</li>
<li>Switch to the new branch</li>
</ol>
<p>With Git Town</p>
<ol>
<li><code>git hack feat/new-feature</code></li>
</ol>
<h3 id="example-2-sync-main" class="headerLink">
    <a href="#example-2-sync-main" class="header-mark"></a>Example 2: Sync Main</h3><p>The following steps would be performed by: <code>git sync</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[master] git fetch --prune --tags
</span></span><span class="line"><span class="cl">[master] git add -A
</span></span><span class="line"><span class="cl">[master] git stash
</span></span><span class="line"><span class="cl">[master] git rebase origin/master
</span></span><span class="line"><span class="cl">[master] git push --tags
</span></span><span class="line"><span class="cl">[master] git stash pop
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="example-3-new-branch-from-main" class="headerLink">
    <a href="#example-3-new-branch-from-main" class="header-mark"></a>Example 3: New Branch From Main</h3><p>Easy to quickly ensure you are up to date with remote and generate a new branch with your current uncommitted changes.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">git</span> <span class="n">town</span> <span class="n">hack</span> <span class="n">fix</span><span class="p">/</span><span class="nb">quick-fix</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[master] git fetch --prune --tags
</span></span><span class="line"><span class="cl">[master] git add -A
</span></span><span class="line"><span class="cl">[master] git stash
</span></span><span class="line"><span class="cl">[master] git rebase origin/master
</span></span><span class="line"><span class="cl">[master] git branch feat/demo-feature master
</span></span><span class="line"><span class="cl">[master] git checkout feat/demo-feature
</span></span><span class="line"><span class="cl">[feat/demo-feature] git stash pop
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="example-4-quickly-create-a-pr-while-on-a-branch-for-seperate-set-of-changes" class="headerLink">
    <a href="#example-4-quickly-create-a-pr-while-on-a-branch-for-seperate-set-of-changes" class="header-mark"></a>Example 4: Quickly Create a PR While On A Branch for Seperate Set of Changes</h3><p>This workflow is far too tedious to do without tooling like this.</p>
<p>Let&rsquo;s say I&rsquo;m on a branch doing some work, and then I recognize that another bug, doc improvements, or other change unrelated to my current work would be good to submit.</p>
<p>With git town, it&rsquo;s as simple as:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">git</span> <span class="n">town</span> <span class="n">hack</span> <span class="n">feat</span><span class="p">/</span><span class="nb">improve-docs</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>I can stage individual lines using VSCode for this fix if I want to, and then after committing:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[feat/demo-feature] git fetch --prune --tags
</span></span><span class="line"><span class="cl">[feat/demo-feature] git add -A
</span></span><span class="line"><span class="cl">[feat/demo-feature] git stash
</span></span><span class="line"><span class="cl">[feat/demo-feature] git checkout master
</span></span><span class="line"><span class="cl">[master] git rebase origin/master
</span></span><span class="line"><span class="cl">[master] git branch feat/demo-feature-2 master
</span></span><span class="line"><span class="cl">[master] git checkout feat/demo-feature-2
</span></span><span class="line"><span class="cl">[feat/demo-feature-2] git stash pop
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">git</span> <span class="n">town</span> <span class="nb">new-pull</span><span class="n">-request</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="example-5-ship-it" class="headerLink">
    <a href="#example-5-ship-it" class="header-mark"></a>Example 5: Ship It</h3><p>When not using a PR-driven workflow, such as solo projects, then you can still branch and get your work over to main to keep a cleaner history with:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">git</span> <span class="n">town</span> <span class="n">ship</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This command ensures all the sync features are run, while then initiating a squash of your branch, allow you to edit the squash message, rebase merge this onto main, and finally clean-up the stale branch.</p>
<h3 id="more-examples" class="headerLink">
    <a href="#more-examples" class="header-mark"></a>More Examples</h3><p>Check out the documentation from the creators: <a href="https://bit.ly/3kjgsKy" target="_blank" rel="noopener noreferrer">Git Town Tutorials</a></p>
<h2 id="other-cool-features" class="headerLink">
    <a href="#other-cool-features" class="header-mark"></a>Other Cool Features</h2><ul>
<li>Automatically prune stale branches after PR merge when syncing</li>
<li>Handles perennial branches if you are using Git Flow methodology.</li>
<li>Extensible for other git providers.</li>
<li>Rename a local branch + remote branch in a single command</li>
<li>Handles a lot of edge cases and failures</li>
</ul>
<h2 id="wrap-up" class="headerLink">
    <a href="#wrap-up" class="header-mark"></a>Wrap-Up</h2><p>When using git, leveraging some tooling like this can accelerate your workflow.
I don&rsquo;t think you need to be an expert in git to use this, as it helps simplify many workflows that are just too tedious to be diligent on when running manually.</p>
<p>You can also do much of this with git aliases, but Git Town has a pretty robust feature-set with a testing framework in place, edge condition handling, and it&rsquo;s fast.
Consider using it you&rsquo;d like to improve your git workflow while simplifying all the effort to do it right.</p>
<h2 id="backlinks" class="headerLink">
    <a href="#backlinks" class="header-mark"></a>Backlinks</h2><ul>
<li><a href="./2021-06-18-git-hub-desktop-quick-look/" rel="">Git Hub Desktop Quick Look</a>
<ul>
<li>Update from <code>main</code> already built in.
This is fantastic, and I can see how this provides a UI to do something similar to <a href="https://www.git-town.com/" target="_blank" rel="noopener noreferrer">Git Town</a> which I blogged on earlier here: <a href="./2021-02-23-git-workflow-with-git-town/" rel="">2021-02-23-git-workflow-with-git-town</a></li>
</ul>
</li>
</ul>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>
</channel>
</rss>
