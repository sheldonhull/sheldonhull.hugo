<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc='http://purl.org/dc/elements/1.1/'>
    <channel>
        <title>Security - Tag - sheldonhull.com</title>
        <link>https://www.sheldonhull.com/tags/security/</link>
        <description>Security - Tag - sheldonhull.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 28 Jun 2021 14:57:32 -0500</lastBuildDate><atom:link href="https://www.sheldonhull.com/tags/security/" rel="self" type="application/rss+xml" />

<item>
    <title>
        Simplify Aws Developer Security With Leapp
    </title>
    <link>
        https://www.sheldonhull.com/simplify-aws-developer-security-with-leapp/
    </link>
    <pubDate>
        Mon, 28 Jun 2021 14:57:32 -0500
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/simplify-aws-developer-security-with-leapp/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="security-is-necessary-work" class="headerLink">
    <a href="#security-is-necessary-work" class="header-mark"></a>Security Is Necessary Work</h2><p>Security can add overhead, get in the way, complicate development, generally can cause challenges to development efforts.
The balance of security and usability is one that all development organizations have to deal with.</p>
<p>I could be ultra-secure by requiring carrier pigeon multi-factor authentication for my team, but I&rsquo;m not sure that would be well received.</p>
<p><figure><a class="lightgallery" href="/images/2021-06-28-1615-diagram-security-steps.png" title="security steps" data-thumbnail="/images/2021-06-28-1615-diagram-security-steps.png" data-sub-html="<h2>security steps can be painful</h2><p>security steps</p>">
        
    </a><figcaption class="image-caption">security steps can be painful</figcaption>
    </figure></p>
<p>It&rsquo;s also critical and the responsibility of each developer, not just the security team.</p>
<p>Let&rsquo;s take a few simple examples where a local developer can compromise security in AWS by simply taking an easy path.</p>
<ul>
<li>Builds a docker container and uploads to Docker Hub, for a generic tool, but includes embedded AWS credentials for a linter in it.</li>
<li>Uses IAM long-lived keys to use a tool to generate infrastructure as code and commits these to the repository due to not excluding the <code>.env</code> file in the <code>.gitignore</code>.</li>
<li>Uses IAM access keys that are highly privileged as the easy path (over narrowing permission scope), puts these in a vendor site that integrates with AWS, and forgets about it.
Vendor has data compromised and the AWS keys are exposed.</li>
</ul>
<p>There are so many ways that using long-lived IAM credentials can be abused.</p>
<h2 id="assume-roles" class="headerLink">
    <a href="#assume-roles" class="header-mark"></a>Assume Roles</h2><p>It&rsquo;s recommended to use Role Assumption instead of IAM Access keys when possible.</p>
<p>This means all the tooling will leverage AWS Security Token Service and use short-lived ephemeral scoped credentials.</p>
<p>This limits both the blast radius and time of any compromise.</p>
<h2 id="security-as-the-path-of-least-resistance" class="headerLink">
    <a href="#security-as-the-path-of-least-resistance" class="header-mark"></a>Security As The Path Of Least Resistance</h2><p>The problem with this path, is one of effort.</p>
<ul>
<li>If using AWS SSO: You&rsquo;d have to
<ul>
<li>login to your portal</li>
<li>open target account section</li>
<li>get programmatic credentials for the account</li>
<li>paste them into your <code>~/.aws/credentials</code> file</li>
</ul>
</li>
<li>If not using SSO, you&rsquo;d have to use the CLI or appropriate sdk to generate your credentials on demand and then set.</li>
</ul>
<p>The key is that all of these approaches aren&rsquo;t easy as the default.</p>
<p>It&rsquo;s easier to just use an IAM key and move on rather than battle with cli, sdks, and other options.</p>
<p>Tools like <a href="https://github.com/99designs/aws-vault" target="_blank" rel="noopener noreferrer">aws-vault</a> are fantastic in helping with this, but aren&rsquo;t intuitive, work the same way in different platforms, and overall still provide a barrier to making it the easiest path.</p>
<h2 id="leapp" class="headerLink">
    <a href="#leapp" class="header-mark"></a>Leapp</h2><blockquote>
<p>ðŸš€ <a href="https://bit.ly/3A8hosQ" target="_blank" rel="noopener noreferrer">Leapp - One step away from your Cloud</a></p>
</blockquote>
<p><figure><a class="lightgallery" href="/images/2021-06-28-14.50.53-Leapp.png" title="leapp ui" data-thumbnail="/images/2021-06-28-14.50.53-Leapp.png" data-sub-html="<h2>leapp ui</h2><p>leapp ui</p>">
        
    </a><figcaption class="image-caption">leapp ui</figcaption>
    </figure></p>
<p>I came across this app by chance back in March when I was just starting at my new job at <code>$Work</code> and was looking for a tool to help simplify things over <code>aws-vault</code>.
Since I was benefiting from AWS SSO, I was looking for a way to simplify switching roles with SSO, while still maintaining compatibility with the lowest common denominator of the lowly <code>~/.aws/credentials</code> file that I knew worked with Terraform, PowerShell, and other tools equally.</p>
<p>The result? Shipped code on day 3!</p>
<h2 id="what-it-provides" class="headerLink">
    <a href="#what-it-provides" class="header-mark"></a>What It Provides</h2><p>Leapp allows the path of least resistance to best practices with AWS Credentials (as well as Azure).
With AWS SSO, you get the benefit of the portal accounts automatically populated as well. Role assumption becomes the easy path.</p>
<h2 id="how-it-works" class="headerLink">
    <a href="#how-it-works" class="header-mark"></a>How It Works</h2><p>In my scenario, using AWS SSO provides a more complicated route that demonstrates the ease of use.</p>
<ul>
<li>Open App</li>
<li>Click on Account &amp; Role I want to assume, say &ldquo;Dev Account - AWS Admininstrator&rdquo;</li>
<li>Pop-up for SSO process using whatever SSO process is setup</li>
<li>Enter name and password</li>
<li>Enter MFA</li>
<li>Auth dialogue proceeds to confirmation screen of signing in CLI</li>
</ul>
<p><figure><a class="lightgallery" href="/images/2021-06-28-15.42.50-Leapp-sso-cli.png" title="aws ccli sso confirmation" data-thumbnail="/images/2021-06-28-15.42.50-Leapp-sso-cli.png" data-sub-html="<h2>aws-cli-sso-confirmation</h2><p>aws ccli sso confirmation</p>">
        
    </a><figcaption class="image-caption">aws-cli-sso-confirmation</figcaption>
    </figure></p>
<ul>
<li>Done!</li>
</ul>
<p>The result:</p>
<p><code>~/.aws/credentials</code> has the <code>[default]</code> profile containing my STS credentials. This token rotates every <code>n</code><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> minutes producing ephemeral credentials.</p>
<p><figure><a class="lightgallery" href="/images/2021-06-28-15.44.09-Code.png" title="credentials file changed" data-thumbnail="/images/2021-06-28-15.44.09-Code.png" data-sub-html="<h2>credentials file changed</h2><p>credentials file changed</p>">
        
    </a><figcaption class="image-caption">credentials file changed</figcaption>
    </figure></p>
<h2 id="enhancements" class="headerLink">
    <a href="#enhancements" class="header-mark"></a>Enhancements</h2><h3 id="named-profiles" class="headerLink">
    <a href="#named-profiles" class="header-mark"></a>Named Profiles</h3><p>The <code>0.6.0</code> release that should be out by Jun 30th (I&rsquo;m using pre-release preview) contained some nice enhancements to this.</p>
<p>In prior versions, <code>[default]</code> profile was just replaced with whatever account you selected.</p>
<p>Now, named profiles are supported as well, so you could have multiple assumed roles open at the same time for calling with named profiles.</p>
<h3 id="ssm-sesssion-launcher" class="headerLink">
    <a href="#ssm-sesssion-launcher" class="header-mark"></a>SSM Sesssion Launcher</h3><p>There&rsquo;s a built-in session launcher, allowing searching of EC2 instances and the instance terminal launch of an <code>aws ssm start-session</code> command against the target.</p>
<p><figure><a class="lightgallery" href="/images/2021-06-28-15.49.14-Leapp-ssm-launcher.png" title="leapp AWS ssm launcher" data-thumbnail="/images/2021-06-28-15.49.14-Leapp-ssm-launcher.png" data-sub-html="<h2>leapp aws ssm launcher</h2><p>leapp AWS ssm launcher</p>">
        
    </a><figcaption class="image-caption">leapp aws ssm launcher</figcaption>
    </figure></p>
<h2 id="future" class="headerLink">
    <a href="#future" class="header-mark"></a>Future</h2><p>The future for Leapp is an interesting question.</p>
<p>They are active in engaging for feedback, so this is built with actual user feedback, not in a bubble.
I had an hour call with one of the developers talking about authentication approaches that helped me appreciate how much they want to engage their uses in a true Agile development pattern.
Not only did I learn a bunch, but ended up being able to provide a few ideas for future consideration.
Great discussion with @andreacavagna01.
Give Andrea a follow on <svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"/></svg> <a href="https://twitter.com/a_cava94" target="_blank" rel="noopener noreferrer">twitter</a> and <svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"/></svg> <a href="https://github.com/andreacavagna01" target="_blank" rel="noopener noreferrer">GitHub</a>!</p>
<p>I can see a larger market than developers if a company rolled it out to users, as it would simplify access by analysts, developers, security team members, and others.</p>
<p>It&rsquo;s not:</p>
<ul>
<li>An &ldquo;essential&rdquo; service</li>
<li>&ldquo;Necessary&rdquo; in a strict sense, because things work fine without this tool.</li>
</ul>
<p>Instead it offers:</p>
<ul>
<li>A usability improvement to developers authentication workflow.</li>
<li>The easy path is a secure path</li>
</ul>
<p>For this reason, I&rsquo;m interested to see how adoption by enterprises and organizations will occur.
I&rsquo;ve observed that solving painpoints can both incentive a company if painful enough to adopt new approaches, but also bypass improvements as they aren&rsquo;t &ldquo;essential&rdquo; and things already work, albeit unoptimally.</p>
<p>For me, I&rsquo;m adding it to my AWS essentials, since now I can just focus on work without and improve my credentials handling without it intruding.
I&rsquo;ll continue recommending this to folks, and keep up with what improvements continue to be released from this team.</p>
<p>Keep up with the Leapp roadmap here: <a href="https://github.com/Noovolari/leapp/projects" target="_blank" rel="noopener noreferrer">GitHub Leapp Roadmap</a></p>
<h2 id="resources" class="headerLink">
    <a href="#resources" class="header-mark"></a>Resources</h2><table>
<thead>
<tr>
<th>Resource</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html" target="_blank" rel="noopener noreferrer">Access management for AWS resources - AWS Identity and Access Management</a></td>
</tr>
<tr>
<td><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/resources.html#resources-general-security" target="_blank" rel="noopener noreferrer">Resources to learn more about IAM - AWS Identity and Access Managemen</a></td>
</tr>
<tr>
<td><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html" target="_blank" rel="noopener noreferrer">Using IAM roles - AWS Identity and Access Management</a></td>
</tr>
</tbody>
</table>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>I believe 10-20 right now&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>

        ]]>
    </description>
</item>


<item>
    <title>
        Understanding The Basics of SQL Server Security
    </title>
    <link>
        https://www.sheldonhull.com/understanding-the-basics-of-sql-server-security/
    </link>
    <pubDate>
        Thu, 24 Jun 2021 12:26:52 -0500
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/understanding-the-basics-of-sql-server-security/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="confusing" class="headerLink">
    <a href="#confusing" class="header-mark"></a>Confusing</h2><p>As I&rsquo;ve worked with folks using other database engines, I&rsquo;ve realized that Microsoft SQL Server has some terminology and handling that is a bit confusing.
Here&rsquo;s my attempt to clarify the basics for myself and others needing a quick overview.
This is not comprehensive coverage of security architecture, which is a very complex topic, more just terminology.</p>
<h2 id="terminology" class="headerLink">
    <a href="#terminology" class="header-mark"></a>Terminology</h2><p>Note that it&rsquo;s best to consider SQL Server as it&rsquo;s own operating system, not just a standard application running.
It has its own memory manage, cpu optimization, user security model, and more.
It&rsquo;s helpful in understanding why a <code>Server Login != Instance Login</code> by reviewing common terminology.
I&rsquo;ve noticed that among other open-source tools like MySQL, it&rsquo;s much more common to hear terms like &ldquo;Database Server&rdquo;, which in my mind mix up for non-dbas the actual scope being talked about.</p>
<table>
<thead>
<tr>
<th>Term</th>
<th>Definition</th>
</tr>
</thead>
<tbody>
<tr>
<td>Server</td>
<td>The operating system</td>
</tr>
<tr>
<td>Instance</td>
<td>The SQL Server Instance that can contain 1 or many databases</td>
</tr>
<tr>
<td>Database</td>
<td>The database inside the instance.</td>
</tr>
</tbody>
</table>
<p>This can be 1 or many.</p>
<table>
<thead>
<tr>
<th>Term</th>
<th>Definition</th>
</tr>
</thead>
<tbody>
<tr>
<td>Server Login</td>
<td>Windows or Linux user at the Operating System level</td>
</tr>
<tr>
<td>SQL Login</td>
<td>Login created inside SQL Server, using SQL statement. This is internal to SQL Server and not part of the Server OS.</td>
</tr>
<tr>
<td>Database User</td>
<td>A database user is created and linked to the Instance SQL Login</td>
</tr>
<tr>
<td>Server Role</td>
<td>Roles for Instance level permissions, such <code>sysadmin (sa)</code>, <code>SecurityAdmin</code>, and others. These do not grant database-level permissions, other than <code>sa</code> having global rights.</td>
</tr>
<tr>
<td>Database Role</td>
<td>A defined role that grants read, write, or other permissions inside the database.</td>
</tr>
</tbody>
</table>
<p>Here&rsquo;s a quick visual I threw together to reinforce the concept.</p>
<p>Yes, I&rsquo;m a talented comic artist and take commissions.
ðŸ˜€</p>
<p><figure><a class="lightgallery" href="/images/2021-06-25-1658-sql-login-database-architecture-dark.png" title="sql-login-database-architecture" data-thumbnail="/images/2021-06-25-1658-sql-login-database-architecture-dark.png" data-sub-html="<h2>Visualize SQL Security 101</h2><p>sql-login-database-architecture</p>">
        
    </a><figcaption class="image-caption">Visualize SQL Security 101</figcaption>
    </figure></p>
<h2 id="best-practice" class="headerLink">
    <a href="#best-practice" class="header-mark"></a>Best Practice</h2><p>When managing user permissions at a database level, it&rsquo;s best to leverage Active Directory (AD) groups.
Once this is done, you&rsquo;d create roles.
The members of those roles would be the AD Groups.</p>
<h2 id="no-active-directory" class="headerLink">
    <a href="#no-active-directory" class="header-mark"></a>No Active Directory</h2><p>SQL Logins and corresponding database users must be created if active directory groups aren&rsquo;t being used.</p>
<h2 id="survey-said" class="headerLink">
    <a href="#survey-said" class="header-mark"></a>Survey Said</h2><p>I did a quick Twitter survey and validated that Active Directory Groups are definitely the most common way to manage.</p>
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">As a SQL Server dba, how do you grant access to less privileged devs, including production?
<br><br>I&#39;m curious.
I&#39;ve been part of both AD managed environments and ones where I did everything with SQL Login auth.
<a href="https://twitter.com/hashtag/sqlfamily?src=hash&amp;ref_src=twsrc%5Etfw">#sqlfamily</a>
<a href="https://twitter.com/hashtag/sqlserver?src=hash&amp;ref_src=twsrc%5Etfw">#sqlserver</a>
<a href="https://twitter.com/hashtag/mssql?src=hash&amp;ref_src=twsrc%5Etfw">#mssql</a>
</p>&mdash; Sheldon Hull (@sheldon_hull)
<a href="https://twitter.com/sheldon_hull/status/1408118509104676869?ref_src=twsrc%5Etfw">June 24, 2021</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

        ]]>
    </description>
</item>
</channel>
</rss>
