<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc='http://purl.org/dc/elements/1.1/'>
    <channel>
        <title>Task - Tag - sheldonhull.com</title>
        <link>https://www.sheldonhull.com/tags/task/</link>
        <description>Task - Tag - sheldonhull.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 30 Oct 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.sheldonhull.com/tags/task/" rel="self" type="application/rss+xml" />

<item>
    <title>
        task
    </title>
    <link>
        https://www.sheldonhull.com/notes/development/tooling/task/
    </link>
    <pubDate>
        Fri, 30 Oct 2020 00:00:00 &#43;0000
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/notes/development/tooling/task/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="prerequisites" class="headerLink">
    <a href="#prerequisites" class="header-mark"></a>Prerequisites</h2><p><a href="https://github.com/go-task/task/blob/master/docs/installation.md" target="_blank" rel="noopener noreferrer">Install go-task</a></p>
<p><a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">Install brew (if not already installed)</a></p>
<p><a href="https://pre-commit.com/#install" target="_blank" rel="noopener noreferrer">Install Pre-commit</a></p>
<div
    class="details admonition warning
      open
    "
  >
    <div class="details-summary admonition-title">
      <i
        class="icon fas fa-exclamation-triangle fa-fw"
      ></i>
      Gotchas
      <i class="details-icon fas fa-angle-right fa-fw"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><p>OS-specific limitations exist for Windows.
For instance, without wrapping with a <code>pwsh -c</code> command, you might get a failure with <code>mkdir</code>.</p>
<p>See prior issue <a href="https://github.com/go-task/task/issues/319#issuecomment-626221222" target="_blank" rel="noopener noreferrer">Command can not be run in Windows · Issue #319 · go-task/task · GitHub</a> for more information.</p>
</div>
    </div>
  </div>
<h2 id="common-config-setup" class="headerLink">
    <a href="#common-config-setup" class="header-mark"></a>Common Config Setup</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">silent</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="l">prefixed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">dotenv</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="l">.env]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">includes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">compose</span><span class="p">:</span><span class="w"> </span><span class="l">./Taskfile.compose.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">precommit</span><span class="p">:</span><span class="w"> </span><span class="l">./Taskfile.precommit.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">env</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">AWS_SDK_LOAD_CONFIG</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">AWS_REGION</span><span class="p">:</span><span class="w"> </span><span class="l">us-east-1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">DOCKER_BUILDKIT</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="common-variable-setup" class="headerLink">
    <a href="#common-variable-setup" class="header-mark"></a>Common Variable Setup</h2><p>The following are console escape sequences to provide some nice formatting for the output.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">vars</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">black</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;30m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">red</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;31m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">green</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;32m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">orange</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;33m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">blue</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;34m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">purple</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;35m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cyan</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;36m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">light_gray</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:0;37m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">dark_gray</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;30m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">light_red</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;31m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">light_green</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;32m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">yellow</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;33m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">light_blue</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;34m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">light_purple</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;35m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">light_cyan</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;36m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">white</span><span class="p">:</span><span class="w"> </span><span class="l">\033[:1;37m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">nocolor</span><span class="p">:</span><span class="w"> </span><span class="l">\u001b[0m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">reversed</span><span class="p">:</span><span class="w"> </span><span class="l">\u001b[7m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ARTIFACT_DIRECTORY</span><span class="p">:</span><span class="w"> </span><span class="l">./artifacts/</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="common-base-config" class="headerLink">
    <a href="#common-base-config" class="header-mark"></a>Common Base Config</h2><p>This is content I&rsquo;d typically paste to get started on a task file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">default</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">task</span><span class="p">:</span><span class="w"> </span><span class="l">list</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">list</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">list tasks</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">task --list</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vars</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">variable output</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo -e &#34;{{.light_gray}}=== ℹ {{ .reversed }} Variable Info from Task {{ .nocolor }} === &#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo -e &#34;{{.light_gray}}ARTIFACT_DIRECTORY          {{.nocolor}}: {{ .orange}}{{ .ARTIFACT_DIRECTORY }} {{ .nocolor }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo -e &#34;{{.light_gray}}DOCKER_BUILDKIT             {{.nocolor}}: {{ .orange}}{{ .DOCKER_BUILDKIT }} {{ .nocolor }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo -e &#34;{{.light_gray}}AWS_SDK_LOAD_CONFIG         {{.nocolor}}: {{ .orange}}{{ .AWS_SDK_LOAD_CONFIG }} {{ .nocolor }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo -e &#34;{{.light_gray}}AWS_REGION                  {{.nocolor}}: {{ .orange}}{{ .AWS_REGION }} {{ .nocolor }}&#34;</span><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">test</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">run basic tests against compose projects</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="l">🧪</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo &#34;todo&#34;</span><span class="w">        
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="console-logging" class="headerLink">
    <a href="#console-logging" class="header-mark"></a>Console Logging</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">test -f nonexistentfile ||         echo -e &#34;{{.red}}file does not exist: [{{ .NONEXISTENTFILE }}]  {{.nocolor}}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="pre-commit" class="headerLink">
    <a href="#pre-commit" class="header-mark"></a>Pre-Commit</h2><p>I use this framework to simplify my project linting and checks.</p>
<p>You can load this as a separate base file by creating it in the same root directory of your project with the name: <code>Taskfile.precommit.yml</code> and include it as the base config shows.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">silent</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="l">prefixed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">run</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">run pre-commit against all files manually</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">pre-commit run --all-files</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">autoupdate</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">update the precommit file with latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">pre-commit autoupdate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">init</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">ensure precommit tooling is available</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="l">⚙️</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        {{if eq OS &#34;windows&#34;}}
</span></span></span><span class="line"><span class="cl"><span class="sd">        pip install pre-commit || echo -e &#34;{{.light_cyan}} 🔥 you need python installed to run this  {{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        {{else}}
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo &#34;setting up precommit. This requires brew (works on Linux &amp; macOS)&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        echo &#34;if fails install Linux brew with the following command&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        if brew --version &amp;&gt;/dev/null ; then
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo -e  &#34;{{.green}} ✅ Command succeeded. Homebrew is installed {{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        else
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo -e &#34;{{.red}} ❗ Command failed. Homebrew not detected {{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo -e &#34;{{.red}}❗ Install homebrew on Linux or macOS (not root) using the following command and try again: {{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo -e &#34;{{.orange}} /bin/bash -c &#34;&#34;\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&#34;&#34; {{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">        fi
</span></span></span><span class="line"><span class="cl"><span class="sd">        export HOMEBREW_NO_AUTO_UPDATE=1
</span></span></span><span class="line"><span class="cl"><span class="sd">        package=pre-commit
</span></span></span><span class="line"><span class="cl"><span class="sd">        brew list $package &amp;&gt;/dev/null || brew install $package
</span></span></span><span class="line"><span class="cl"><span class="sd">        {{end}}</span><span class="w">        
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="install-tool-from-github-release" class="headerLink">
    <a href="#install-tool-from-github-release" class="header-mark"></a>Install Tool From GitHub Release</h2><p>Without using any external dependency tooling, here&rsquo;s a way to add a task that might need to grab a binary, using <code>jq</code> and <code>curl</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">init:ci</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">setup tooling for project and download dependencies</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      go mod tidy &amp;&amp; echo -e &#34;{{.green}} ✅ go mod tidy completed{{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">      go install github.com/goreleaser/goreleaser@latest
</span></span></span><span class="line"><span class="cl"><span class="sd">      go get github.com/caarlos0/svu  # Semver versioning tool
</span></span></span><span class="line"><span class="cl"><span class="sd">      mkdir {{ .TOOLS_DIRECTORY }}
</span></span></span><span class="line"><span class="cl"><span class="sd">      {{if eq OS &#34;windows&#34;}}
</span></span></span><span class="line"><span class="cl"><span class="sd">      DOWNLOAD_URL=`curl -sL https://api.github.com/repos/restechnica/semverbot/releases/latest | jq -r &#39;.assets[].browser_download_url&#39; | grep &#34;windows&#34;`
</span></span></span><span class="line"><span class="cl"><span class="sd">      curl -qo tools/sbot -sL $DOWNLOAD_URL
</span></span></span><span class="line"><span class="cl"><span class="sd">      {{end}}
</span></span></span><span class="line"><span class="cl"><span class="sd">      {{if eq OS &#34;darwin&#34;}}
</span></span></span><span class="line"><span class="cl"><span class="sd">      DOWNLOAD_URL=`curl -sL https://api.github.com/repos/restechnica/semverbot/releases/latest | jq -r &#39;.assets[].browser_download_url&#39; | grep &#34;darwin&#34;`
</span></span></span><span class="line"><span class="cl"><span class="sd">      curl -qo tools/sbot -sL $DOWNLOAD_URL
</span></span></span><span class="line"><span class="cl"><span class="sd">      chmod +rwx ./tools/sbot
</span></span></span><span class="line"><span class="cl"><span class="sd">      {{end}}
</span></span></span><span class="line"><span class="cl"><span class="sd">      {{if eq OS &#34;linux&#34;}}
</span></span></span><span class="line"><span class="cl"><span class="sd">      DOWNLOAD_URL=`curl -sL https://api.github.com/repos/restechnica/semverbot/releases/latest | jq -r &#39;.assets[].browser_download_url&#39; | grep &#34;linux&#34;`
</span></span></span><span class="line"><span class="cl"><span class="sd">      curl -qo tools/sbot -sL $DOWNLOAD_URL
</span></span></span><span class="line"><span class="cl"><span class="sd">      chmod +rwx ./tools/sbot
</span></span></span><span class="line"><span class="cl"><span class="sd">      {{end}}
</span></span></span><span class="line"><span class="cl"><span class="sd">      echo -e &#34;{{.green}} ✅ go semverbot downloaded to tools{{.nocolor}}&#34;</span><span class="w">      
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="initialize-project-tooling" class="headerLink">
    <a href="#initialize-project-tooling" class="header-mark"></a>Initialize Project Tooling</h2><p>All projects requiring non-standardized tooling should have this setup in a standard <code>init</code> style command that makes it easy to get up and running, assuming that the basic SDK tooling is installed of course. To solve SDK&rsquo;s and other lower-level tooling, you&rsquo;ll want to use Docker with Codespaces or other methods to ensure tooling setup is standardized and easy (Ansible, Docker, etc.).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">init</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">initialize all tooling for ci and developer work locally</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">task</span><span class="p">:</span><span class="w"> </span><span class="l">init:dev</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">task</span><span class="p">:</span><span class="w"> </span><span class="l">init:ci</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">init:dev</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">initialize tools for a developer, but not required for CI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      go install github.com/evilmartians/lefthook@master
</span></span></span><span class="line"><span class="cl"><span class="sd">      lefthook install</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">init:ci</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">desc</span><span class="p">:</span><span class="w"> </span><span class="l">setup tooling for project and download dependencies</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cmds</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      go mod tidy &amp;&amp; echo -e &#34;{{.green}} ✅ go mod tidy completed{{.nocolor}}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">      go install github.com/goreleaser/goreleaser@latest</span><span class="w">      
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>This would be how I&rsquo;d set up a project.</p>
<p>Notice the separation of <code>ci</code> and <code>dev</code> tooling.</p>
<p>This is important if you don&rsquo;t want to needlessly add duration to your CI checks.</p>
<p>This will give flexibility to ensure tooling like Lefthook or others aren&rsquo;t installed by a CI build.</p>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>
</channel>
</rss>
