<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc='http://purl.org/dc/elements/1.1/'>
    <channel>
        <title>Influxdb - Tag - sheldonhull.com</title>
        <link>https://www.sheldonhull.com/tags/influxdb/</link>
        <description>Influxdb - Tag - sheldonhull.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 30 Oct 2020 19:40:52 -0500</lastBuildDate><atom:link href="https://www.sheldonhull.com/tags/influxdb/" rel="self" type="application/rss+xml" />

<item>
    <title>
        Quick Start to Using Influxdb on Macos
    </title>
    <link>
        https://www.sheldonhull.com/quick-start-to-using-influxdb-on-macos/
    </link>
    <pubDate>
        Fri, 30 Oct 2020 19:40:52 -0500
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/quick-start-to-using-influxdb-on-macos/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="intro" class="headerLink">
    <a href="#intro" class="header-mark"></a>Intro</h2><p>OSS 2.0 is a release candidate at this time, so this may change once it&rsquo;s released.</p>
<p>It wasn&rsquo;t quite clear to me how to get up and running quickly with a docker based setup for OSS 2.0 version, so this may save you some time if you are interested. It also should be very similar to the Windows workflow excepting the basic <code>brew</code> commands and service install commands you&rsquo;ll just want to flip over to <code>choco install telegraf</code> .</p>
<h2 id="docker-compose" class="headerLink">
    <a href="#docker-compose" class="header-mark"></a>Docker Compose</h2><p>Grabbed this from a comment and modified the ports as the were flipped from the <code>9999</code> range used during first early access.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># docker exec -it influxdb /bin/bash</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">influxdb</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always </span><span class="w"> </span><span class="c"># It will always restart on rebooting machine now, no need to manually manage this</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">influxdb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;8086:8086&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">images</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s1">&#39;quay.io/influxdb/influxdb:2.0.0-rc&#39;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">influxdb:/var/lib/influxdb2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">influxd run --bolt-path /var/lib/influxdb2/influxd.bolt --engine-path /var/lib/influxdb2/engine --store bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">influxdb</span><span class="p">:</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>The main modifications I made was ensuring it auto started.</p>
<p>Access the instance on <code>localhost:8086</code>.</p>
<h2 id="telegraf" class="headerLink">
    <a href="#telegraf" class="header-mark"></a>Telegraf</h2><p>It&rsquo;s pretty straight-forward using homebrew. <code>brew install telegraf</code></p>
<p>The configuration file is created by default at: <code>/usr/local/etc/telegraf.conf</code> as well as the <code>telegraf.d</code> directory.</p>
<p>I&rsquo;m still a bit new on macOS, so once I opened Chronograf, I wanted to try the new http based configuration endpoint, so I used the web gui to create a telegraf config for system metrics and tried replacing the <code>telegraf.conf</code> reference in the plist file.
This didn&rsquo;t work for me as I couldn&rsquo;t get the environment variable for the token to be used, so I ended up leaving it as is, and instead edited the configuration.</p>
<ul>
<li><code>brew services stop telegraf</code></li>
<li><code>micro /usr/Local/Cellar/telegraf/1.15.3/homebrew.mxcl.telegraf.plist</code></li>
</ul>
<p>I updated the configuration (see line 16) unsuccessfully with the http config endpoint.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
</span></span><span class="line"><span class="cl">&lt;!DOCTYPE plist PUBLIC &#34;-//Apple//DTD PLIST 1.0//EN&#34; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;
</span></span><span class="line"><span class="cl">&lt;plist version=&#34;1.0&#34;&gt;
</span></span><span class="line"><span class="cl">  &lt;dict&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;KeepAlive&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;dict&gt;
</span></span><span class="line"><span class="cl">      &lt;key&gt;SuccessfulExit&lt;/key&gt;
</span></span><span class="line"><span class="cl">      &lt;false/&gt;
</span></span><span class="line"><span class="cl">    &lt;/dict&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;Label&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;string&gt;homebrew.mxcl.telegraf&lt;/string&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;ProgramArguments&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;array&gt;
</span></span><span class="line"><span class="cl">      &lt;string&gt;/usr/local/opt/telegraf/bin/telegraf&lt;/string&gt;
</span></span><span class="line"><span class="cl">      &lt;string&gt;-config&lt;/string&gt;
</span></span><span class="line"><span class="cl">      &lt;string&gt;/usr/local/etc/telegraf.conf&lt;/string&gt;
</span></span><span class="line"><span class="cl">      &lt;string&gt;-config-directory&lt;/string&gt;
</span></span><span class="line"><span class="cl">      &lt;string&gt;/usr/local/etc/telegraf.d&lt;/string&gt;
</span></span><span class="line"><span class="cl">    &lt;/array&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;RunAtLoad&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;true/&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;WorkingDirectory&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;string&gt;/usr/local/var&lt;/string&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;StandardErrorPath&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;string&gt;/usr/local/var/log/telegraf.log&lt;/string&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;StandardOutPath&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;string&gt;/usr/local/var/log/telegraf.log&lt;/string&gt;
</span></span><span class="line"><span class="cl">  &lt;/dict&gt;
</span></span><span class="line"><span class="cl">&lt;/plist&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>What worked for me was to edit: <code>micro /usr/local/etc/telegraf.conf</code> and add the following (I set the token explicitly in my test case).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"> <span class="p">[[</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">influxdb_v2</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">urls</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;http://localhost:8086&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">token</span> <span class="p">=</span> <span class="s2">&#34;$INFLUX_TOKEN&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">organization</span> <span class="p">=</span> <span class="s2">&#34;sheldonhull&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">bucket</span> <span class="p">=</span> <span class="s2">&#34;telegraf&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Start service with <code>brew services restart telegraf</code> and it should start sending data.</li>
<li>NOTE: I&rsquo;m still getting the hang of brew and service management on Linux/macOS, so the first time I did this it didn&rsquo;t work and I ended up starting it using <code>telegraf -config http://localhost:8086/api/v2/telegrafs/068ab4d50aa24000</code> and just running initially in my console (having already set the <code>INFLUX_TOKEN</code> environment variable)
Any comments on if I did something wrong here would be appreciated &#x1f601; I&rsquo;m pretty sure the culprit is the need for the <code>INFLUX_TOKEN</code> environment variable and I&rsquo;m not sure if the service load with brew is actually sourcing the <code>.profile</code> I put this in.
Maybe I can pass it explicitly?</li>
</ul>
<h2 id="additional-monitoring" class="headerLink">
    <a href="#additional-monitoring" class="header-mark"></a>Additional Monitoring</h2><p>This is a work in progress.
I found <a href="https://github.com/influxdata/telegraf/issues/3192" target="_blank" rel="noopener noreferrer">GitHub Issue #3192</a> and used it as a starting point to experiment with getting a &ldquo;top processes&rdquo; for evaluating what specifically was impacting my systems at the time of a spike.
I&rsquo;ll update this once I&rsquo;ve gotten things further improved.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="c"># # Monitor process cpu and memory usage</span>
</span></span><span class="line"><span class="cl"><span class="c"># https://github.com/influxdata/telegraf/tree/master/plugins/inputs/procstat</span>
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">inputs</span><span class="p">.</span><span class="nx">procstat</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pattern</span> <span class="p">=</span> <span class="s2">&#34;${USER}&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fieldpass</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;cpu_time_user&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;cpu_usage&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;memory_rss&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">processors</span><span class="p">.</span><span class="nx">topk</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">namepass</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;*procstat*&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">fields</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;cpu_time_user&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;cpu_usage&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;memory_rss&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">period</span> <span class="p">=</span> <span class="mi">20</span>
</span></span><span class="line"><span class="cl">  <span class="nx">k</span> <span class="p">=</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">  <span class="c"># group_by = [&#34;pid&#34;]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">processors</span><span class="p">.</span><span class="nx">regex</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">namepass</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;*procstat*&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">[[</span><span class="nx">processors</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">tags</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">key</span> <span class="p">=</span> <span class="s2">&#34;process_name&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pattern</span> <span class="p">=</span> <span class="s2">&#34;^(.{60}).*&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">replacement</span> <span class="p">=</span> <span class="s2">&#34;${1}...&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="final-result" class="headerLink">
    <a href="#final-result" class="header-mark"></a>Final Result</h2><p>I like the final result.
Dark theme for the win.</p>
<p>I&rsquo;ve had some spikes in Vscode recently, impacting my CPU so I&rsquo;ve been meaning to do something like this for a while, but finally got it knocked out today once I realized there was a 2.0 docker release I could use to get up and running easily. Next step will be to add some process level detail so I can track the culprit (probably VScode + Docker Codespaces).</p>
<p><figure><a class="lightgallery" href="/images/2020-10-30_19-39-41-influx-macos.png" title="Influx System Dashboard" data-thumbnail="/images/2020-10-30_19-39-41-influx-macos.png">
        
    </a></figure></p>
<h2 id="wishlist" class="headerLink">
    <a href="#wishlist" class="header-mark"></a>Wishlist</h2><ul>
<li>Pretty formatting of date/time like Grafana does, such as converting seconds into hour/minutes.</li>
<li>Log viewing api so I could query cloudwatch logs like Grafana offers without needing to ingest.</li>
<li>Edit existing telegraf configuration in the load data section. Right now I can&rsquo;t edit.</li>
<li>MSSQL Custom SQL Server query plugin to be released &#x1f601; <a href="https://github.com/influxdata/telegraf/issues/1894" target="_blank" rel="noopener noreferrer">Issue 1894</a> &amp; <a href="https://github.com/influxdata/telegraf/pull/3069" target="_blank" rel="noopener noreferrer">PR 3069</a>
Right now I&rsquo;ve done custom exec based queries using dbatools and locally included PowerShell modules.
This sorta defeats the flexibility of having a custom query call so I can minimize external dependencies.</li>
</ul>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>


<item>
    <title>
        Capturing Perfmon Counters With Telegraf
    </title>
    <link>
        https://www.sheldonhull.com/capturing-perfmon-counters-with-telegraf/
    </link>
    <pubDate>
        Tue, 08 Aug 2017 00:00:00 &#43;0000
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/capturing-perfmon-counters-with-telegraf/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="setting-up-telegraf-to-capture-metrics" class="headerLink">
    <a href="#setting-up-telegraf-to-capture-metrics" class="header-mark"></a>Setting up Telegraf to Capture Metrics</h2><p>I had a lot of issues with getting the GO enviroment setup in windows, this time and previous times. For using telegraf, I&rsquo;d honestly recommend just leveraging the compiled binary provided.</p>
<p>Once downloaded, generate a new config file by running the first command and then the next to install as service. (I tried doing through NSSM originally and it failed to work with telegraf fyi)</p>
<script src="https://gist.github.com/sheldonhull/583210cfb588d1958b5c2ba67515ec29.js"></script>

<p>Once this service was setup and credentials entered, it&rsquo;s ready to run as a service in the background, sending whatever you&rsquo;ve configured to the destination of choice.</p>
<p>In my test in Amazon Web Services, using EC2 with Windows Server 2016, I had no issues once EC2 issues were resolved to allow the services to start sending their metrics and show me the load being experienced across all in Grafana.</p>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>


<item>
    <title>
        InfluxDB and Annotations
    </title>
    <link>
        https://www.sheldonhull.com/influx-db-and-annotations/
    </link>
    <pubDate>
        Mon, 07 Aug 2017 00:00:00 &#43;0000
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/influx-db-and-annotations/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <div
    class="details admonition info
      open
    "
  >
    <div class="details-summary admonition-title">
      <i
        class="icon fas fa-info-circle fa-fw"
      ></i>
      Updated: 2020-04-29
      <i class="details-icon fas fa-angle-right fa-fw"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">broken image links removed</div>
    </div>
  </div>
<p>This post assumes you&rsquo;ve already setup InfluxDB and have Grafana running.</p>
<h2 id="inserting-annotations" class="headerLink">
    <a href="#inserting-annotations" class="header-mark"></a>Inserting annotations</h2><p>Annotations are not a special type of resource, instead it&rsquo;s just another metric that you query with a feature in Grafana to display on other metrics. This means the same insert Line Protocol applies to the Annotation.</p>
<p>This post on maxchadwick.xyz greatly helped me get started: <a href="http://bit.ly/2pgmwtH" target="_blank" rel="noopener noreferrer">Creating Grafana Annotations with InfluxDb Max Chadwick</a></p>
<p>Per Max&rsquo;s original post it supports html as well, so you could link for example to a build, test result, or anything else you want to link to from your performance statistics.</p>
<script src="https://gist.github.com/sheldonhull/e95ca6d909f741ebe80fa28c6da4de5b.js"></script>

<p>This provides an annotation on your timeline in a nice format for browsing through the timeline. I can see usage cases for identifying specific activity or progress in tests, helping coorelate the performance metrics with known activity steps from a build, script, or other related tasks. You could have an type of activity trigger this powershell insert, providing a lot of flexibility to help relate useful metrics to your monitoring.</p>
<p>My personal use case has been to ensure load testing start/end times and other significant points of time in a test are easily visible in the same timeline I&rsquo;m reviewing metrics on.</p>
<p>Warning: I did experience performance degradation with Grafana and many annotations on a timeline. I found just disabling the annotations kept this from occurring, so you only pull them when youd them.</p>
<h2 id="adding-annotations-to-grafana" class="headerLink">
    <a href="#adding-annotations-to-grafana" class="header-mark"></a>Adding Annotations to Grafana</h2><p>Now that you have the results being inserted into InfluxDB, you can query these in Grafana as annonations to overlay your graphs.</p>
<h2 id="potential-uses" class="headerLink">
    <a href="#potential-uses" class="header-mark"></a>Potential Uses</h2><p>I could see a whole lot of uses for this!</p>
<ul>
<li>insert at build related activity</li>
<li>Windows update</li>
<li>Specific Database Related Maintenance like Ola Hallengren&rsquo;s index optimize or database integrity check</li>
</ul>
<p>Monitoring always loses it&rsquo;s value when you have a limited picture of what is happening. Triggering relevant details for stuff that might help analyze activity might be the key to immediately gaining an understanding on what is causing a spike of activity, or of better evaluating the timeline of a load test.</p>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>


<item>
    <title>
        Running InfluxDB as a service in Windows
    </title>
    <link>
        https://www.sheldonhull.com/running-influx-db-as-a-service-in-windows/
    </link>
    <pubDate>
        Wed, 24 May 2017 00:00:00 &#43;0000
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/running-influx-db-as-a-service-in-windows/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <h2 id="run-as-a-service" class="headerLink">
    <a href="#run-as-a-service" class="header-mark"></a>Run as a Service</h2><p>As part of the process to setup some metrics collections for sql-server based on perfmon counters I&rsquo;ve been utilizing InfluxDB. Part of getting started on this is ensuring InfluxDB runs as a service instead of requiring me to launch the exe manually. For more information on InfluxDb, see my other post: <a href="/running-influx-db-as-a-service-in-windows/" rel="">Setting Up InfluxDb, Chronograf, and Grafana for the SqlServer Dev</a></p>
<p>This of course, did not go without it&rsquo;s share of investigation since I&rsquo;m working with a compiled executable that was originally built in <code>GO</code>. I had issues registering InfluxDB as a service. This is typically due to enviromental/path variables. In my powershell launch of <code>InfluxD.exe</code> I typically used a script like the following:</p>
<script src="https://gist.github.com/sheldonhull/6f4e11d60244af00edac438cb9ae6ea5.js"></script>

<p>I investigated running as a service and found a great reminder on using NSSM for this: <a href="http://bit.ly/2pDW65t" target="_blank" rel="noopener noreferrer">Running Go executables &hellip; as windows services &rsquo; Ricard Clau</a> I went and downloaded NSSM again and first setup and register of the service went without a hitch, unlike my attempt at running <code>New-service -name 'InfluxDB' -BinaryPathName 'C:\Influx\influxdb\InfluxD.exe' -DisplayName 'InfluxDB' -StartupType Automatic -Credential (get-credential)</code>. I&rsquo;m pretty sure the core issue was the <code>PATH</code> variables and other related enviromental paths were not setup with &ldquo;working directory&rdquo; being the InfluxDB which would be expected by it.</p>
<h2 id="nssm---non-sucking-service-managerhttpbitly2pdtr25" class="headerLink">
    <a href="#nssm---non-sucking-service-managerhttpbitly2pdtr25" class="header-mark"></a><a href="http://bit.ly/2pDTR25" target="_blank" rel="noopener noreferrer">NSSM - Non-Sucking Service Manager</a></h2><p>Using <code>nssm install</code> provided the GUI which I used in this case. Using the following command I was able to see the steps taken to install, which would allow reproducing the install from a .bat file very easily.</p>
<pre><code>set-location C:\tools
.\nssm.exe dump InfluxDB
</code></pre>
<p>This resulted in the following output:</p>
<pre><code>C:\tools\nssm.exe install InfluxDB C:\Influx\influxdb\influxd.exe
C:\tools\nssm.exe set InfluxDB AppDirectory C:\Influx\influxdb
C:\tools\nssm.exe set InfluxDB AppExit Default Restart
C:\tools\nssm.exe set InfluxDB AppEvents Start/Pre C:\Influx\influxdb\influx.exe
C:\tools\nssm.exe set InfluxDB AppEvents Start/Post C:\Influx\influxdb\influx.exe
C:\tools\nssm.exe set InfluxDB AppNoConsole 1
C:\tools\nssm.exe set InfluxDB AppRestartDelay 60000
C:\tools\nssm.exe set InfluxDB DisplayName InfluxDB
C:\tools\nssm.exe set InfluxDB ObjectName SERVICENAME &quot;PASSWORD&quot;
C:\tools\nssm.exe set InfluxDB Start SERVICE_AUTO_START
C:\tools\nssm.exe set InfluxDB Type SERVICE_WIN32_OWN_PROCESS
</code></pre>
<p>Pretty awesome! It&rsquo;s a nice change to have something perfectly the first time with no issues.</p>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>


<item>
    <title>
        Setting Up InfluxDb, Chronograf, and Grafana for the SqlServer Dev
    </title>
    <link>
        https://www.sheldonhull.com/setting-up-influx-db-chronograf-and-grafana-for-the-sql-server-dev/
    </link>
    <pubDate>
        Wed, 17 May 2017 00:00:00 &#43;0000
    </pubDate>
    
    
    <guid>
        https://www.sheldonhull.com/setting-up-influx-db-chronograf-and-grafana-for-the-sql-server-dev/
    </guid>
    <description>
        <![CDATA[
        
        
        
            
        
        <div
    class="details admonition info
      open
    "
  >
    <div class="details-summary admonition-title">
      <i
        class="icon fas fa-info-circle fa-fw"
      ></i>
      Updated: 2020-04-29
      <i class="details-icon fas fa-angle-right fa-fw"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">broken image links removed</div>
    </div>
  </div>
<p>There are some beautiful ways to visualize time series data with the tools I&rsquo;m going to go over. This post is purely focused on the initial setup and saving you some time there. In a future post, I&rsquo;ll show how some of these tools can help you visualize your server performance in a powerful way, including taking metrics from multiple types of servers that be working with SQL Server, and combining the metrics when appropriate to give a full picture of performance.</p>
<p>A beautiful way to visualize performance across a variety of machines</p>
<p>It&rsquo;s pretty epic to combine information across a variety of sources and be able to relate the metrics to the &ldquo;big picture&rdquo; that individual machine monitoring might fail to shed light on.</p>
<h2 id="downloading" class="headerLink">
    <a href="#downloading" class="header-mark"></a>Downloading</h2><p>I started by running this quick powershell script to download the stable toolkit.
<script src="https://gist.github.com/sheldonhull/5fa33704e2599e3ddb46a8299ad3bafe.js"></script>
</p>
<p>Once extracted, I moved the influx extracted subfolder into the InfluxDB folder to keep it clean. Now all the binaries rested in <code>C:\Influx\InfluxDB</code> folder with no nesting folders.
I referenced the documentation for getting started with InfluxDB.</p>
<h2 id="setup-local-influxdb" class="headerLink">
    <a href="#setup-local-influxdb" class="header-mark"></a>Setup Local InfluxDb</h2><p>Started up the local influxdb binary.</p>
<script src="https://gist.github.com/sheldonhull/6f4e11d60244af00edac438cb9ae6ea5.js"></script>

<p>Initializing the new database was simple as documented: <code>create database statty</code></p>
<div
    class="details admonition warning
      open
    "
  >
    <div class="details-summary admonition-title">
      <i
        class="icon fas fa-exclamation-triangle fa-fw"
      ></i>
      Case Sensitivity
      <i class="details-icon fas fa-angle-right fa-fw"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">InfluxDB is case sensitive. Make sure to check your case if something isn&rsquo;t working, such as use &ldquo;DatabaseName&rdquo; instead of use &ldquo;databasename&rdquo;</div>
    </div>
  </div>
<p>Also, if you get an error with access to the file, try running as admin.</p>
<h2 id="more-enviromental-variable-fun" class="headerLink">
    <a href="#more-enviromental-variable-fun" class="header-mark"></a>More Enviromental Variable Fun</h2><p>A simple fix to errors related to paths and the HOME variable these tools often need, per a Github issue, was to ensure the current path was available as a variable. I did this quickly with a simple batch file to launch the consoles as well as one option, as well as updated the Start-Process script to include a statement to set the env variable for the processes being started. This eliminated the issue. For more details see <a href="http://bit.ly/2nJib1P" target="_blank" rel="noopener noreferrer">github issues</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-batch" data-lang="batch"><span class="line"><span class="cl"><span class="k">SET</span> <span class="nv">HOME</span><span class="p">=</span><span class="nv">%~dp0</span>
</span></span><span class="line"><span class="cl"><span class="k">start</span> influxd.exe
</span></span><span class="line"><span class="cl"><span class="k">start</span> influx.exe
</span></span></code></pre></td></tr></table>
</div>
</div><p>An additional snippet for launching the console version via a bat file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-batch" data-lang="batch"><span class="line"><span class="cl"><span class="k">set</span> <span class="nv">HOME</span><span class="p">=</span>C:\influx
</span></span><span class="line"><span class="cl">cmd /k influx.exe -host <span class="s2">&#34;MyInfluxDbHost&#34;</span> -database <span class="s2">&#34;statty&#34;</span> -precision <span class="s2">&#34;s&#34;</span> -format column
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="quick-start-for-telegraf" class="headerLink">
    <a href="#quick-start-for-telegraf" class="header-mark"></a>Quick Start for Telegraf</h2><p>Once you have this running you can take the telegraf binaries and run them on any other server to start capturing some default preset metrics. I launched with the following script and placed this in <code>C:\Influx</code> directory to make it easy to access for future runs.</p>
<script src="https://gist.github.com/sheldonhull/1a9641ce607569dde912f996137debae.js"></script>

<p>Edit the conf file to add some tags, change default sampling interval and more. I&rsquo;ll post another article about setting up telegraf to run as a service in the future so search for more info</p>
<p>You can also apply the same bat file in the startup directory such as:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-batch" data-lang="batch"><span class="line"><span class="cl"><span class="p">@</span><span class="c1">REM alternative is using variable</span>
</span></span><span class="line"><span class="cl"><span class="p">@</span><span class="c1">REM set TELEGRAF_CONFIG_PATH=C:\telegraf\telegraf.conf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">start</span> <span class="nv">%~dp0</span>telegraf.exe -config <span class="nv">%~dp0</span>telegraf.conf
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="run-chronograf" class="headerLink">
    <a href="#run-chronograf" class="header-mark"></a>Run Chronograf</h2><p>One these metrics began to run, I ran Chronograf. This is Influx&rsquo;s alternative to Grafana, another more mature product.</p>
<script src="https://gist.github.com/sheldonhull/958094675f6ab53897616755dd130144.js"></script>

<p>Upon loading and opening up the instance monitor, I found immediately that I was able to get some metrics from the defaults.</p>
<h2 id="get-grafana" class="headerLink">
    <a href="#get-grafana" class="header-mark"></a>Get Grafana</h2><p>My preferred visualization tool, this was far more robust and well documented than Chronograf which has promise, but is a relatively new project.</p>
<p>When starting Grafana, you can run the following script. It creates a copy of the default ini to copy for the user to edit if not already there.</p>
<script src="https://gist.github.com/sheldonhull/3cff34cf9029bd99cd1e888e755c307c.js"></script>

<p>Once you open the localhost page, if you don&rsquo;t see datasources in the left hand drop down, create an organization and ensure you are an admin, you&rsquo;ll then see the option to add datasources. I simple pointed the page to InfluxDB console running on the server I had setup previously.</p>
<h2 id="summary" class="headerLink">
    <a href="#summary" class="header-mark"></a>summary</h2><p>This is just a quick guide on getting started as I found a lot of little bumps in the road since the projects are written in <code>GO</code> and not an easily run .NET project. Getting through this will hopefully give you a way to get started. I&rsquo;ll blog a bit more soon on visualization of the metrics captured, some custom annotations to help make metrics come alive with real-time event notifications (like &ldquo;load test started&rdquo; and &ldquo;build ended&rdquo; etc). It&rsquo;s a really promising solution for those who want some really nice flexibility in using perfmon and related metrics to visualize Windows and SQL Server performance.</p>

        ]]>
    <a href="https://brid.gy/publish/twitter"></a>
    <data class="p-bridgy-omit-link" value="false"></data>
    </description>
</item>
</channel>
</rss>
